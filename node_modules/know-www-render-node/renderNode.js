'use strict'

// Use fs with promises
const fs = require('mz/fs')
const Handlebars = require('handlebars')
const Promise = require('bluebird')
const registerHelpers = require('./registerHelpers')

module.exports = function(mainTemplatePath, partials, jsonData) {
    // Registers our custom helper functions used in templates
    registerHelpers()

    // Replace partial strings with partial content promises
    let partialsPromises = Object.keys(partials).reduce((newPartials, name) => {
            newPartials[name] = fs.readFile(partials[name], {encoding: 'utf8'})
            return newPartials
        }, partials)

    // Load main template as string
    // Promise.props will resolve object key/value pairs where value is promise to be resolved
    let compiledTemplatePromise = Promise.props(partialsPromises)
        .then(partials => {
            // Register partials as object with keys being partial names and values
            // being partial html contents
            Handlebars.registerPartial(partials)

            // load main template contents
            return fs.readFile(mainTemplatePath, {encoding: 'utf8'})
        })
        .then(html => {
            return Handlebars.compile(html, {noEscape: true})
        })

    let renderedTemplatePromise = compiledTemplatePromise
        .then(templateFunc => templateFunc(jsonData))

    return renderedTemplatePromise
}
